@model OnlineShop.Models.RegisterModel
@using BotDetect.Web.Mvc;
<link href="@BotDetect.Web.CaptchaUrls.Absolute.LayoutStyleSheetUrl" rel="stylesheet" type="text/css"/>

@{ MvcCaptcha registerCaptcha = new MvcCaptcha("SampleCaptcha");}

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section jsFooter{
    <script src="~/Assets/Client/js/controller/userController.js"></script>
    }

<div class="header-outs" id="home">
    @*@RenderBody()*@
    @*@RenderSection("header", required: true)*@
    @*@RenderPage("~/Views/Shared/Header.cshtml")*@
    @{Html.RenderAction("Header", "Home");}
    <!-- Slideshow 4 -->
</div>

<!-- banner -->
<div class="inner_page-banner one-img">
</div>
<!--//banner -->
<!-- short -->
<div class="using-border py-3">
    <div class="inner_breadcrumb  ml-4">
        <ul class="short_ls">
            <li>
                <a href="/">Home</a>
                <span>/ /</span>
            </li>
            <li>Đăng kí</li>
        </ul>
    </div>
</div>


<section class="contact py-lg-4 py-md-3 py-sm-3 py-3">
    <div class="container py-lg-5 py-md-4 py-sm-4 py-3">
        <h3 class="title text-center mb-lg-5 mb-md-4 mb-sm-4 mb-3">Đăng kí</h3>
        <div class="contact-list-grid">


            @using (Html.BeginForm("Register","User",FormMethod.Post))
            {
                @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                @if (ViewBag.Success != null)
                {
                    <div class="alert alert-success">@ViewBag.Success</div>
                }


                <div class="form-group contact-forms">
                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @name = "username", @placeholder = "UserName" })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group contact-forms">
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", @name = "password", @placeholder = "Password" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>

                <div class="form-group contact-forms">
                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", @name = "confirmpassword", @placeholder = "ConfirmPassword" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>

                <div class="form-group contact-forms">
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @name = "name", @placeholder = "Name" })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>

                <div class="form-group contact-forms">
                    @Html.TextBoxFor(model => model.Address, new { @class = "form-control", @name = "address", @placeholder = "Address" })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>

                <div class="form-group contact-forms">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @name = "email", @placeholder = "Email" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>

                <div class="form-group contact-forms">
                    @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", @name = "phone", @placeholder = "Phone" })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
                <div class="form-group contact-forms">
                    @Html.DropDownList("ProvinceID", new SelectList(new string[] { }), new { @class = "form-control", @id = "ddlProvince", @name = "province", @placeholder = "Province" })
                    @Html.ValidationMessageFor(model => model.ProvinceID, "", new { @class = "text-danger" })
                </div>

                <div class="form-group contact-forms">
                    @Html.DropDownList("DistrictID", new SelectList(new string[] { }), new { @class = "form-control", @id = "ddlDistrict", @name = "district", @placeholder = "District" })
                    @Html.ValidationMessageFor(model => model.DistrictID, "", new { @class = "text-danger" })
                </div>

                <div class="form-group contact-forms">
                    @Html.Captcha(registerCaptcha)
                    @Html.TextBox("CaptchaCode")
                </div>
                <button type="submit" class="btn btn-block sent-butnn">Create</button>

                @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>*@

            </div>
            }

        </div>
    </div>
</section>


            